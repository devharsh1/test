name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...
          
    - name: Create code coverage status for the current commit
      run: |
        curl "https://{GIT_USER}:${GIT_TOKEN}@api.github.com/repos/${ORG_NAME}/${PROJECT_NAME}/statuses/${COMMIT_SHA}" -d "{\"state\": \"pending\",\"target_url\": \"https://github.com/${ORG_NAME}/${PROJECT_NAME}/pull/${PULL_NUMBER}/checks?check_run_id=${RUN_ID}\",\"description\": \"in progress â€” This check has started... \",\"context\": \"code cov\"}"
      env:
        GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
        GIT_USER: ${{ secrets.GIT_USER }}
        ORG_NAME: ${{ secrets.ORG_NAME }}
        PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
        COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
        RUN_ID: ${{ github.run_id }}
        PULL_NUMBER: ${{ github.event.pull_request.number }}
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15
      id: go
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Test
      run: |
        CVPKG=$(go list ./... | grep -v mocks | tr '\n' ',')
        go test -coverpkg=${CVPKG} -coverprofile=coverage.out -covermode=count  ./...
    - name: publish code cov
      uses: actions/upload-artifact@v2
      with:
        name: code covarege report
        path: coverage.out

    
