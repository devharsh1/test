name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...
      
    - name: Run coverage
      run: go test -race -coverprofile=coverage.out -covermode=atomic
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
          
#     - name: Create code coverage status for the current commit
#       run: |
#         curl "https://{GIT_USER}:${GIT_TOKEN}@api.github.com/repos/${ORG_NAME}/${PROJECT_NAME}/statuses/${COMMIT_SHA}" -d "{\"state\": \"pending\",\"target_url\": \"https://github.com/${ORG_NAME}/${PROJECT_NAME}/pull/${PULL_NUMBER}/checks?check_run_id=${RUN_ID}\",\"description\": \"in progress â€” This check has started... \",\"context\": \"code cov\"}"
#       env:
#         GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
#         GIT_USER: ${{ secrets.GIT_USER }}
#         ORG_NAME: ${{ secrets.ORG_NAME }}
#         PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
#         COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
#         RUN_ID: ${{ github.run_id }}
#         PULL_NUMBER: ${{ github.event.pull_request.number }}
#     - name: Set up Go 1.x
#       uses: actions/setup-go@v2
#       with:
#         go-version: ^1.15
#       id: go
#     - name: Check out code into the Go module directory
#       uses: actions/checkout@v2
#     - name: Test
#       run: |
#         CVPKG=$(go list ./... | grep -v mocks | tr '\n' ',')
#         go test -coverpkg=${CVPKG} -coverprofile=coverage.out -covermode=count  ./...
#     - name: publish code cov
#       uses: actions/upload-artifact@v2
#       with:
#         name: code covarege report
#         path: coverage.out
#new one
#     - name: Run Test
#       run: |
#           go test -v ./... -covermode=count -coverprofile=coverage.out
#           go tool cover -func=coverage.out -o=coverage.out

#     - name: Go Coverage Badge  # Pass the `coverage.out` output to this action
#       uses: tj-actions/coverage-badge-go@v2
#       with:
#         filename: coverage.out

#     - name: Verify Changed files
#       uses: tj-actions/verify-changed-files@v9.1
#       id: verify-changed-files
#       with:
#         files: README.md

#     - name: Commit changes
#       if: steps.verify-changed-files.outputs.files_changed == 'true'
#       run: |
#         git config --local user.email "action@github.com"
#         git config --local user.name "GitHub Action"
#         git add README.md
#         git commit -m "chore: Updated coverage badge."

#     - name: Push changes
#       if: steps.verify-changed-files.outputs.files_changed == 'true'
#       uses: ad-m/github-push-action@master
#       with:
#         github_token: ${{ github.token }}
#         branch: ${{ github.head_ref }}
  
